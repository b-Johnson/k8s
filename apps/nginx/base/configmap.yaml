apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: nginx-app
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: web-server
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        # Use temporary directories that don't require root
        client_body_temp_path /var/cache/nginx/client_temp;
        proxy_temp_path       /var/cache/nginx/proxy_temp_path;
        fastcgi_temp_path     /var/cache/nginx/fastcgi_temp;
        uwsgi_temp_path       /var/cache/nginx/uwsgi_temp;
        scgi_temp_path        /var/cache/nginx/scgi_temp;

        # Basic settings
        sendfile        on;
        tcp_nopush      on;
        tcp_nodelay     on;
        keepalive_timeout  65;
        types_hash_max_size 2048;

        # Logging
        access_log  /var/log/nginx/access.log;
        error_log   /var/log/nginx/error.log;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            application/atom+xml
            application/javascript
            application/json
            application/rss+xml
            application/vnd.ms-fontobject
            application/x-font-ttf
            application/x-web-app-manifest+json
            application/xhtml+xml
            application/xml
            font/opentype
            image/svg+xml
            image/x-icon
            text/css
            text/plain
            text/x-component;

        server {
            listen       8080;
            server_name  localhost;

            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                root   /usr/share/nginx/html;
            }
        }
    }

  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Nginx K8s App</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                margin: 40px;
                background-color: #f5f5f5;
            }
            .container {
                background-color: white;
                padding: 20px;
                border-radius: 8px;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            }
            h1 {
                color: #333;
                text-align: center;
            }
            .info {
                background-color: #e8f4fd;
                padding: 15px;
                border-left: 4px solid #0078d4;
                margin: 20px 0;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>ðŸš€ Nginx Kubernetes Application</h1>
            <div class="info">
                <p><strong>Status:</strong> Successfully deployed with ArgoCD!</p>
                <p><strong>Application:</strong> Nginx Web Server</p>
                <p><strong>Deployment:</strong> Kubernetes + ArgoCD</p>
                <p><strong>Environment:</strong> Development</p>
                <p><strong>Security:</strong> Running as non-root user (UID: 101)</p>
            </div>
            <p>This nginx application is running in a Kubernetes cluster and managed by ArgoCD for GitOps continuous deployment.</p>
        </div>
    </body>
    </html>
